{"version":3,"sources":["App.js","index.js"],"names":["useStyle","makeStyles","theme","container","marginTop","backgroundColor","palette","info","light","webcam","justifyContent","justify","marginLeft","App","classes","webcamRef","React","useRef","downloadLinkRef","useState","imgSrc","setImgSrc","selectedCam","setSelectedCam","videoConstraints","capture","useCallback","imageSrc","current","getScreenshot","mediaRecorderRef","capturing","setCapturing","recordedChunks","setRecordedChunks","blobData","setBlobData","videoShowFlag","setvideoShowFlag","handleStartCaptureClick","MediaRecorder","stream","mimeType","addEventListener","handleDataAvailable","start","data","size","prev","concat","handleStopCaptureClick","stop","handleDownload","length","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","body","appendChild","style","href","download","click","Container","className","Typography","variant","align","Grid","spacing","item","sm","md","audio","height","ref","screenshotFormat","width","Button","color","onClick","console","log","Fragment","e","handleVideoShow","preventDefault","src","startIcon","controls","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dfd0bd4b.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// const videoConstraintsForFrontCam = {\n//   width: 400,\n//   height: 250,\n//   facingMode: \"user\",\n// };\n\n// const videoConstraintsForBackCam = {\n//   width: 400,\n//   height: 250,\n//   facingMode: { exact: \"environment\" },\n// };\n\nfunction App() {\n  const classes = useStyle();\n  // For taking snaps\n  // const WebcamComponent = () => <Webcam />;\n  const webcamRef = React.useRef(null);\n  const downloadLinkRef = useRef(null);\n  const [imgSrc, setImgSrc] = useState(null);\n  const [selectedCam, setSelectedCam] = useState(true);\n\n  const videoConstraints = {};\n  if (selectedCam) {\n    const videoConstraints = {\n      width: 400,\n      height: 250,\n      facingMode: \"user\",\n    };\n  } else {\n    const videoConstraints = {\n      width: 400,\n      height: 250,\n      facingMode: { exact: \"environment\" },\n    };\n  }\n\n  const handleChangeToBackCam = () => {\n    setSelectedCam(false);\n    console.log(`Changed to back Cam with value ${videoConstraints}`);\n  };\n\n  const handleChangeToFrontCam = () => {\n    setSelectedCam(true);\n    console.log(`Changed to Front Cam with value ${videoConstraints}`);\n  };\n\n  // const videoConstraints = {\n  //   width: 400,\n  //   height: 250,\n  //   facingMode: \"user\",\n  // };\n\n  // if (selectedCam) {\n  //    videoConstraints = {\n  //     width: 400,\n  //     height: 250,\n  //     facingMode: \"user\",\n  //   };\n  // } else {\n  //    videoConstraints = {\n  //     width: 400,\n  //     height: 250,\n  //     facingMode: { exact: \"environment\" },\n  //   };\n  // }\n\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImgSrc(imageSrc);\n  }, [webcamRef, setImgSrc]);\n\n  const download = () => {\n    downloadLinkRef.current.click();\n  };\n  const discardSnap = () => {\n    setImgSrc(null);\n  };\n\n  // For video recording...\n  const mediaRecorderRef = useRef(null);\n  const [capturing, setCapturing] = useState(false);\n  const [recordedChunks, setRecordedChunks] = useState([]);\n  const [blobData, setBlobData] = useState(\"\");\n  const [videoShowFlag, setvideoShowFlag] = useState(false);\n\n  const handleStartCaptureClick = React.useCallback(() => {\n    setRecordedChunks([]);\n    setBlobData(\"\");\n    setvideoShowFlag(false);\n\n    setCapturing(true);\n    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.stream, {\n      mimeType: \"video/webm\",\n      //mimeType: \"video/mp4\",\n      //initCallback: null,\n    });\n    mediaRecorderRef.current.addEventListener(\n      \"dataavailable\",\n      handleDataAvailable\n    );\n    mediaRecorderRef.current.start();\n  }, [webcamRef, setCapturing, mediaRecorderRef]);\n\n  const handleDataAvailable = React.useCallback(\n    ({ data }) => {\n      if (data.size > 0) {\n        setRecordedChunks((prev) => prev.concat(data));\n      }\n    },\n    [setRecordedChunks]\n  );\n\n  const handleStopCaptureClick = React.useCallback(() => {\n    mediaRecorderRef.current.stop();\n    setCapturing(false);\n  }, [mediaRecorderRef, webcamRef, setCapturing]);\n\n  const handleDownload = React.useCallback(() => {\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, {\n        type: \"video/webm\",\n      });\n\n      const url = URL.createObjectURL(blob);\n      //console.log(url);\n      //setBlobData(url);\n      const a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style = \"display: none\";\n      a.href = url;\n      a.download = \"SampleVideoRecord.webm\";\n      a.click();\n      //setBlobData(url);\n      //window.URL.revokeObjectURL(url);\n      //setRecordedChunks([]);\n    }\n  }, [recordedChunks]);\n\n  const handleDiscardDownload = () => {\n    setRecordedChunks([]);\n    setBlobData(\"\");\n    setvideoShowFlag(false);\n  };\n\n  const handleVideoShow = () => {\n    if (recordedChunks.length) {\n      const blob = new Blob(recordedChunks, {\n        type: \"video/webm\",\n      });\n\n      const url = URL.createObjectURL(blob);\n      console.log(url);\n      setBlobData(url);\n    }\n    setvideoShowFlag(true);\n  };\n\n  return (\n    <>\n      <Container className={classes.container}>\n        <Typography variant=\"h3\" align=\"center\">\n          Capture Snap and record video using webcam\n        </Typography>\n      </Container>\n      <Container style={{ marginTop: \"20px\" }}>\n        <Grid container spacing={3}>\n          <Grid item sm={12} md={12} justify=\"center\">\n            <div className={classes.webcam}>\n              <Webcam\n                audio={true}\n                height={250}\n                ref={webcamRef}\n                screenshotFormat=\"png\"\n                width={400}\n                videoConstraints={videoConstraints}\n              />\n              <br />\n              <div>\n                {selectedCam ? (\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={handleChangeToBackCam}\n                  >\n                    Change To Back Cam\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={handleChangeToFrontCam}\n                  >\n                    Change To Front Cam\n                  </Button>\n                )}\n              </div>\n              <br />\n              <div>\n                {capturing ? (\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={handleStopCaptureClick}\n                  >\n                    Stop Recording\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleStartCaptureClick}\n                  >\n                    Start Recording\n                  </Button>\n                )}\n                {recordedChunks.length > 0 && (\n                  <React.Fragment>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      style={{ marginLeft: \"3px\" }}\n                      onClick={(e) => {\n                        handleVideoShow();\n                      }}\n                    >\n                      Show Recording\n                    </Button>\n                  </React.Fragment>\n                )}\n              </div>\n              <br />\n              <div>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    capture();\n                  }}\n                >\n                  Take Snap\n                </Button>\n              </div>\n            </div>\n          </Grid>\n          <Grid item sm={12} md={4} style={{ marginLeft: \"5%\" }}>\n            <div>\n              {imgSrc ? <img src={imgSrc} /> : null}\n              <a ref={downloadLinkRef} href={imgSrc} download></a>\n              <div>\n                {imgSrc ? (\n                  <React.Fragment>\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<SaveIcon />}\n                        onClick={(e) => {\n                          download();\n                        }}\n                      >\n                        {\" \"}\n                        Download\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ marginLeft: \"3px\" }}\n                        startIcon={<DeleteIcon />}\n                        onClick={(e) => {\n                          discardSnap();\n                        }}\n                      >\n                        {\" \"}\n                        Discard Snap\n                      </Button>\n                    </div>\n                  </React.Fragment>\n                ) : null}\n              </div>\n            </div>\n          </Grid>\n          <Grid item sm={12} md={4} style={{ marginLeft: \"20%\" }}>\n            {videoShowFlag ? (\n              <React.Fragment>\n                <video width=\"400\" src={blobData} type=\"video/webm\" controls>\n                  console.log('blobData') Your browser does not support HTML5\n                  video.\n                </video>\n                <div>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<SaveIcon />}\n                    onClick={handleDownload}\n                  >\n                    Download\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    style={{ marginLeft: \"3px\" }}\n                    startIcon={<DeleteIcon />}\n                    onClick={(e) => {\n                      handleDiscardDownload();\n                    }}\n                  >\n                    Discard\n                  </Button>\n                </div>\n              </React.Fragment>\n            ) : null}\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nconst useStyle = makeStyles((theme) => ({\n  container: {\n    marginTop: \"20px\",\n    backgroundColor: theme.palette.info.light,\n  },\n  webcam: {\n    justifyContent: \"center\",\n    justify: \"center\",\n    marginLeft: \"35%\",\n  },\n}));\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}